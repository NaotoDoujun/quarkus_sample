quarkus.application.name=rest-db
quarkus.http.port=8081
quarkus.http.test-port=0

## CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*

## Graylog
%prod.quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.host=localhost
quarkus.log.handler.gelf.port=12201

## OTEL
%dev.quarkus.otel.enabled=false
quarkus.otel.resource.attributes="app=${quarkus.application.name},application=db-service,system=quarkus-sample"
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
quarkus.http.access-log.pattern="...traceId=%{X,traceId} spanId=%{X,spanId}"

quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql

%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=postgres

# Reactive config
%dev.quarkus.datasource.reactive.url=vertx-reactive:postgresql://postgres/postgres